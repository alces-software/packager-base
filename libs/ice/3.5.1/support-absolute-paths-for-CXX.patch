--- cpp/config/Make.rules.Linux.orig	2013-10-04 15:48:14.000000000 +0000
+++ cpp/config/Make.rules.Linux		2014-09-01 14:09:14.553052575 +0000
@@ -31,119 +31,83 @@
    CXX			= g++
 endif
 
-ifeq ($(CXX),g++)
-
-    ifneq ($(SUSE_i586),)
-        CXXARCHFLAGS	+= -march=i586
-    endif
-
-    ifeq ($(CPP11), yes)
-        CPPFLAGS += -std=c++0x
-    endif
-
-   ifeq ($(MACHINE),sparc64)
-      #
-      # We are an ultra, at least, and so have the atomic instructions
-      #
-      $(warning ===================================================================) 
-      $(warning Linux on SPARC is currently unsupported. The Ice team does not)
-      $(warning maintain SPARC specific portions of the source code or build)
-      $(warning system. Contact sales@zeroc.com if you wish to sponsor official)
-      $(warning support.)
-      $(warning ===================================================================) 
-      USE_SPARC_ASM	= yes
-      CXXARCHFLAGS	+= -mcpu=ultrasparc -pipe -Wno-deprecated -DUSE_SPARC_ASM
-   endif
-
-   ifeq ($(MACHINE),sparc)
-      #
-      # We are a sun4m or sun4c
-      # On sun4m, there is a bug in some CPU/kernel/gcc configurations which
-      # prevent us from using '-mcpu=v8'
-      #
-      $(warning ===================================================================) 
-      $(warning Linux on SPARC is currently unsupported. The Ice team does not)
-      $(warning maintain SPARC specific portions of the source code or build)
-      $(warning system. Contact sales@zeroc.com if you wish to sponsor official)
-      $(warning support.)
-      $(warning ===================================================================) 
-      USE_SPARC_ASM	= no
-      CXXARCHFLAGS	+= -mtune=v8 -pipe -Wno-deprecated -DICE_USE_MUTEX_SHARED
-   endif
-
-   ifeq ($(MACHINE),x86_64)
-      ifeq ($(LP64),yes)
-         CXXARCHFLAGS	+= -m64
-      else
-         CXXARCHFLAGS	+= -m32
-      endif
-   endif
-
-   CXXFLAGS		= $(CXXARCHFLAGS) -Wall -Werror -pthread
-
-   ifneq ($(GENPIC),no)
-      CXXFLAGS		+= -fPIC
-   endif
+ifneq ($(SUSE_i586),)
+    CXXARCHFLAGS	+= -march=i586
+endif
 
-   ifeq ($(OPTIMIZE),yes)
-      CXXFLAGS		+= -O2 -DNDEBUG
-   else
-      CXXFLAGS		+= -g 
-   endif
+ifeq ($(CPP11), yes)
+    CPPFLAGS += -std=c++0x
+endif
 
+ifeq ($(MACHINE),sparc64)
    #
-   # C++ run-time libraries, necessary for linking some shared libraries.
+   # We are an ultra, at least, and so have the atomic instructions
    #
-   CXXLIBS		=
-
-   mkshlib		= $(CXX) -shared $(LDFLAGS) -o $(1) -Wl,-h,$(2) $(3) $(4)
-
-   mklib		= ar cr $(1) $(2)
-
-   rpathlink            = -Wl,-rpath-link,$(1) 
-
-   ifneq ($(embedded_runpath_prefix),)
-      LDPLATFORMFLAGS      = -Wl,--enable-new-dtags -Wl,-rpath,$(runpath_libdir)
-   else
-      LDPLATFORMFLAGS      = -Wl,--enable-new-dtags
-   endif
-
-   LDPLATFORMFLAGS	+= -rdynamic
-
+   $(warning ===================================================================) 
+   $(warning Linux on SPARC is currently unsupported. The Ice team does not)
+   $(warning maintain SPARC specific portions of the source code or build)
+   $(warning system. Contact sales@zeroc.com if you wish to sponsor official)
+   $(warning support.)
+   $(warning ===================================================================) 
+   USE_SPARC_ASM	= yes
+   CXXARCHFLAGS	+= -mcpu=ultrasparc -pipe -Wno-deprecated -DUSE_SPARC_ASM
 endif
 
-ifeq ($(CXX),icpc)
+ifeq ($(MACHINE),sparc)
+   #
+   # We are a sun4m or sun4c
+   # On sun4m, there is a bug in some CPU/kernel/gcc configurations which
+   # prevent us from using '-mcpu=v8'
+   #
    $(warning ===================================================================) 
-   $(warning Intel C++ is currently not supported. The Ice team does not)
-   $(warning maintain Intel C++ specific portions of the source code or build)
-   $(warning system.  Contact sales@zeroc.com if you wish to sponsor official)
+   $(warning Linux on SPARC is currently unsupported. The Ice team does not)
+   $(warning maintain SPARC specific portions of the source code or build)
+   $(warning system. Contact sales@zeroc.com if you wish to sponsor official)
    $(warning support.)
    $(warning ===================================================================) 
-   CXXFLAGS		= -D_REENTRANT    
-
-   ifneq ($(GENPIC),no)
-      CXXFLAGS		+= -fPIC
-   endif
+   USE_SPARC_ASM	= no
+   CXXARCHFLAGS	+= -mtune=v8 -pipe -Wno-deprecated -DICE_USE_MUTEX_SHARED
+endif
 
-   ifeq ($(OPTIMIZE),yes)
-      CXXFLAGS		+= -O2 -DNDEBUG
+ifeq ($(MACHINE),x86_64)
+   ifeq ($(LP64),yes)
+      CXXARCHFLAGS	+= -m64
    else
-      CXXFLAGS		+= -g
+      CXXARCHFLAGS	+= -m32
    endif
+endif
 
-   #
-   # C++ run-time libraries, necessary for linking some shared libraries.
-   #
-   CXXLIBS		=
+CXXFLAGS		= $(CXXARCHFLAGS) -Wall -Werror -pthread
+
+ifneq ($(GENPIC),no)
+   CXXFLAGS		+= -fPIC
+endif
+
+ifeq ($(OPTIMIZE),yes)
+   CXXFLAGS		+= -O2 -DNDEBUG
+else
+   CXXFLAGS		+= -g 
+endif
 
-   mkshlib		= $(CXX) -shared $(LDFLAGS) -o $(1) -Wl,-h,$(2) $(3) $(4) -lpthread
+#
+# C++ run-time libraries, necessary for linking some shared libraries.
+#
+CXXLIBS		=
+
+mkshlib		= $(CXX) -shared $(LDFLAGS) -o $(1) -Wl,-h,$(2) $(3) $(4)
 
-   mklib		= ar cr $(1) $(2)
+mklib		= ar cr $(1) $(2)
 
-   rpathlink            = -Wl,-rpath-link,$(1) 
+rpathlink            = -Wl,-rpath-link,$(1) 
 
+ifneq ($(embedded_runpath_prefix),)
+   LDPLATFORMFLAGS      = -Wl,--enable-new-dtags -Wl,-rpath,$(runpath_libdir)
+else
+   LDPLATFORMFLAGS      = -Wl,--enable-new-dtags
 endif
 
+LDPLATFORMFLAGS	+= -rdynamic
+
 BASELIBS		= -lIceUtil
 ifneq ($(NPTL_LIB),)
     CXXFLAGS		+= $(NPTL_FLAGS)
@@ -165,4 +129,4 @@
    QT_FLAGS             = -I$(QT_HOME)/include
    QT_LIBS              = -L$(QT_HOME)/$(libsubdir) -lQtCore -lQtSql
    QT_RPATH_LINK        = $(call rpathlink,$(QT_HOME)/$(libsubdir))
-endif
\ No newline at end of file
+endif
