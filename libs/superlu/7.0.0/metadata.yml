---
:schema: 1
:license: BSD License
:summary: Set of subroutines to solve a sparse linear system A*X=B
:title: SuperLU
:url: https://portal.nersc.gov/project/sparse/superlu/
:description: |
  SuperLU is a general purpose library for the direct solution of
  large, sparse, nonsymmetric systems of linear equations. The library
  is written in C and is callable from either C or Fortran program. It
  uses MPI, OpenMP and CUDA to support various forms of
  parallelism. It supports both real and complex datatypes, both
  single and double precision, and 64-bit integer indexing. The
  library routines performs an LU decomposition with partial pivoting
  and triangular system solves through forward and back
  substitution. The LU factorization routines can handle non-square
  matrices but the triangular solves are performed only for square
  matrices. The matrix columns may be preordered (before
  factorization) either through library or user supplied
  routines. This preordering for sparsity is completely separate from
  the factorization. Working precision iterative refinement
  subroutines are provided for improved backward stability. Routines
  are also provided to equilibrate the system, estimate the condition
  number, calculate the relative backward error, and estimate error
  bounds for the refined solutions.
:group: Libraries
:changelog: |
  * Tue Aug 27 2024 - Rob Brown <rob.brown@alces-flight.com>
    - Updated to v7.0.0
  * Thu Sep 30 2021 - Rob Brown <rob.brown@alces-flight.com>
    - First created
:src: v7.0.0.tar.gz
:requirements:
  :tool: apps/cmake
  :build:
    - libs/openblas
:type: libs
:version: 7.0.0
:compilers:
  gcc:
:dependencies:
   :build:
     el:
       - gcc-c++
:compile: |
  mkdir build
  cd build
  cmake -DCMAKE_INSTALL_PREFIX=<%= dest_dir %> \
    -DTPL_BLAS_LIBRARIES=$OPENBLASLIB/libopenblas.so \
    -Denable_internal_blaslib=0 \
    -DBUILD_SHARED_LIBS=1 \
    .. <%= redirect(:cmake) %>
  make <%= redirect(:compile) %>
:install: |
  cd build
  make install <%= redirect(:install) %>
:module: |
  setenv ${appcaps}DIR ${appdir}
  setenv ${appcaps}LIB ${appdir}/lib64
  setenv ${appcaps}INCLUDE ${appdir}/include

  prepend-path LD_LIBRARY_PATH ${appdir}/lib64
