---
:license: OTHER - Boost Software License, Version 1.0
:summary: Free peer-reviewed portable C++ source libraries
:url: http://www.boost.org/
:description: |
  Boost provides free peer-reviewed portable C++ source libraries. The
  emphasis is on libraries which work well with the C++ Standard
  Library, in the hopes of establishing "existing practice" for
  extensions and providing reference implementations so that the Boost
  libraries are suitable for eventual standardization. (Some of the
  libraries have already been proposed for inclusion in the C++
  Standards Committee's upcoming C++ Standard Library Technical
  Report.)
:group: Libraries
:changelog: |
  * Tue Jan  8 2013 Mark J. Titorenko <mark.titorenko@alces-software.com>
    - require apps/python module at build time
  * Thu Oct 11 2012 Mark J. Titorenko <mark.titorenko@alces-software.com>
    - added older 1.39.0 version (for CASAVA 1.6.0 support)
  * Fri Aug 17 2012 Mark J. Titorenko <mark.titorenko@alces-software.com>
    - added older 1.45.0 version for dindel support
    - refactored to use packager style
  * Fri Jun  8 2012 Mark J. Titorenko <mark.titorenko@alces-software.com>
    - update to 1.49.0
    - refactored to use installer style
  * Thu Jul 7 2011 Steve Norledge
    - update to 1.4.6.1
    - depend on openmpi and python 
    - add latest link
  * Tue Feb 22 2011 Steve Norledge
    - First created
:src: boost_1_39_0.tar.bz2
:src_dir: boost_1_39_0
:type: libs
:version: '1.39.0'
:requirements:
  :runtime: mpi/openmpi
  :build: 
    - mpi/openmpi
    - apps/python
:compilers:
  gcc:
:compile: |
  # We specify libdir explicitly due to a bug in bootstrap.sh that
  # otherwise causes the libraries to be installed in /lib; see
  # https://svn.boost.org/trac/boost/ticket/3006
  ./bootstrap.sh --prefix=<%= dest_dir %> --libdir=<%= dest_dir %>/lib <%= redirect(:configure) %>
  echo "using mpi ;" >> project-config.jam

  # Maybe we should use this...? http://www.openmamba.org/showfile.html?file=/pub/openmamba/devel/patches/libboost-1.39.0-tagged_layout.patch
  # Then we can do this:
  #   ./bjam --layout=tagged threading=multi stage <%= redirect(:stage) %>
  #   ./bjam --layout=tagged threading=single stage <%= redirect(:stage) %>
  # In the meantime, we hack a trailing -mt for those apps that need
  # it as part of the install routine below.

  ./bjam --layout=system stage <%= redirect(:stage) %>
:install: |
  ./bjam --layout=system install <%= redirect(:install) %>
  cd <%= dest_dir %>/lib
  for a in *.so; do
    ln -s $a $(basename $a .so)-mt.so
  done
:module: |
  setenv ${appcaps}DIR ${appdir}
  setenv ${appcaps}LIB ${appdir}/lib
  setenv ${appcaps}INCLUDE ${appdir}/include

  prepend-path LD_LIBRARY_PATH ${appdir}/lib
