---
:src: SuiteSparse-3.7.1.tar.gz
:src_dir: SuiteSparse
:type: libs
:version: '3.7.1'
:compilers:
  gcc:
:compile: |
  # patch the UFconfig/UFconfig.mk build parameters file to use ATLAS
  patch -p1 <<\EOF
  --- a/UFconfig/UFconfig.mk
  +++ b/UFconfig/UFconfig.mk
  @@ -108,8 +108,8 @@
   # naming the BLAS and LAPACK library (*.a or *.so) files.
   
   # This is probably slow ... it might connect to the Standard Reference BLAS:
  -BLAS = -lblas -lgfortran
  -LAPACK = -llapack
  +BLAS = -L $ATLASDIR/lib -latlas -lf77blas
  +LAPACK = -L $ATLASDIR/lib -llapack
   
   # NOTE: this next option for the "Goto BLAS" has nothing to do with a "goto"
   # statement.  Rather, the Goto BLAS is written by Dr. Kazushige Goto.
  EOF
  make library <%= redirect(:make) %>
:install: |
  # patch the UFconfig/UFconfig.mk build parameters file to use
  # the correct installation directories
  patch -p1 <<\EOF
  --- a/UFconfig/UFconfig.mk
  +++ b/UFconfig/UFconfig.mk
  @@ -77,5 +77,5 @@
  -INSTALL_LIB = /usr/local/lib
  -INSTALL_INCLUDE = /usr/local/include
  +INSTALL_LIB = <%= dest_dir %>/lib
  +INSTALL_INCLUDE = <%= dest_dir %>/include
   
   # For compiling MATLAB mexFunctions (MATLAB 7.5 or later)
   MEX = mex -O -largeArrayDims -lmwlapack -lmwblas
  EOF
  mkdir -p <%= dest_dir %>/lib <%= dest_dir %>/include
  make install <%= redirect(:install) %>
:module: |
  #%Module1.0#####################################################################
  ##
  ## Alces HPC Software Stack - Library module file
  ## Copyright (c) 2008-2012 Alces Software Ltd
  ##
  ################################################################################
  proc ModulesHelp { } {
          global app
          global version
          global appcaps
          global appdir

          puts stderr "Adds `$app-$version' to your environment variables"
          puts stderr ""
          puts stderr "##############"
          puts stderr "ENV after load"
          puts stderr "##############"
          puts stderr "${appcaps}DIR -> base path of library"
          puts stderr "${appcaps}LIB -> lib path of library"
          puts stderr "${appcaps}INCLUDE -> include path of library"
          puts stderr ""
  }

  set     app      <%= package.name %>
  set     version  <%= version %>
  set     appcaps  <%= package.caps_name %>
  set     appdir   <%= dest_dir %>

  module-whatis   "loads the necessary `$app-$version' setup environment"

  setenv ${appcaps}DIR ${appdir}
  setenv ${appcaps}LIB ${appdir}/lib
  setenv ${appcaps}INCLUDE ${appdir}/include
