---
:schema: 1
:title: GiNaC
:license: GPL
:summary: GiNaC is not a CAS
:url: https://www.ginac.de/CLN/
:description: |
  GiNaC is a C++ library. It has been developed to become a replacement
  engine for xloops which in the past was powered by the Maple CAS. Its
  design is revolutionary in a sense that contrary to other CAS it does
  not try to provide extensive algebraic capabilities and a simple
  programming language but instead accepts a given language (C++) and
  extends it by a set of algebraic capabilities. The name GiNaC is an
  iterated and recursive abbreviation for GiNaC is Not a CAS, where CAS
  stands for Computer Algebra System.

  Currently, GiNaC's capabilities include:

    * Very fast manipulation of large integers and rationals owing to
      the CLN library (for instance, it uses Karatsuba multiplication
      and Sch√∂nhage-Strassen multiplication for very large integers).
    * Efficient handling of multivariate polynomials and rational
      functions.
    * Support for linear algebra includes symbolic matrices, vectors and
      solving equations.
    * Very fast heuristic polynomial GCD.
    * Many built in functions (sin, cos, atan, sinh, factorial, etc.)
    * Symbolic differentiation and series expansion of all built-in
      functions.
    * Several forms of output (also as optimized C++, for numerical
      postprocessing).
    * Memory-efficiency and -safety through the internal use of
      reference counting for all expressions.
:group: Libraries
:type: libs
:changelog: |
  * Thu Feb  1 2018 - Mark J. Titorenko <mark.titorenko@alces-software.com>
    - First created
:src: ginac-1.7.2.tar.gz
:src_dir: ginac-release_1-7-2
:version: 1.7.2
:compilers:
  gcc:
:dependencies:
  el:
    - automake
    - autoconf
    - libtool
    - texinfo
    - bison
    - flex
    - byacc
    - gcc-c++
:requirements:
  :build:
    - libs/cln
  :runtime:
    - libs/cln
:compile: |
  autoreconf -i <%= redirect(:autoreconf) %>
  ./configure --prefix=<%= dest_dir %> <%= redirect(:configure) %>
  make <%= redirect(:make) %>
:install: |
  make install <%= redirect(:install) %>
:module: |
  setenv ${appcaps}DIR ${appdir}
  setenv ${appcaps}INCLUDE ${appdir}/include
  setenv ${appcaps}LIB ${appdir}/lib
  setenv ${appcaps}BIN ${appdir}/bin

  prepend-path PATH ${appdir}/bin
  prepend-path LD_LIBRARY_PATH ${appdir}/lib
  prepend-path PKG_CONFIG_PATH ${appdir}/lib/pkgconfig
  prepend-path MANPATH ${appdir}/share/man
