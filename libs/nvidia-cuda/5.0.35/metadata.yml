---
:schema: 1
:title: CUDA Toolkit
:license: NONFREE - NVIDIA Software License/CUDPP License
:license_help: |
  For NVIDIA Software License details, see
  <http://www.nvidia.co.uk/object/nv_swlicense.html>.

  For CUDPP Licese details, see
  <http://www.gpgpu.org/static/developer/cudpp/rel/cudpp_1.0a/html/license.html>. 
:summary: Development environment for C and C++ developers building GPU-accelerated applications
:url: http://developer.nvidia.com/cuda/cuda-toolkit
:description: |
  NVIDIA® CUDA(TM) is a general purpose parallel computing
  architecture introduced by NVIDIA. It includes the CUDA Instruction
  Set Architecture (ISA) and the parallel compute engine in the
  GPU. To program to the CUDA architecture, developers can use C, one
  of the most widely used high-level programming languages, which can
  then be run at great performance on a CUDA-enabled processor

  The NVIDIA® CUDA® Toolkit provides a comprehensive development
  environment for C and C++ developers building GPU-accelerated
  applications.  The CUDA Toolkit includes a compiler for NVIDIA GPUs,
  math libraries, and tools for debugging and optimizing the
  performance of your applications.  You’ll also find programming
  guides, user manuals, API reference, and other documentation to help
  you get started quickly accelerating your application with GPUs.
:group: Libraries
:changelog: |
  * Wed Nov 7 2012 - Steve Norledge <steve.norledge@alces-software.com>
    - Bumped to v5 release 5.0.35
    - Modifications to cope with new Nvidia installer that packages SDK Tookit and the Nvidia driver all in one.
    - SDK is now samples
  * Thu Oct 11 2012 - Mark J. Titorenko <mark.titorenko@alces-software.com>
    - Bumped to latest available v4.2.9
  * Tue Sep 25 2012 - Mark J. Titorenko <mark.titorenko@alces-software.com>
    - Refactored to packager style
  * Fri Mar 30 2012 Steve Norledge
    - Bump to latest version
  * Tue Jul 26 2011 Steve Norledge
    - First created
:sources:
  - nvidia-driver-installer
:src: cuda_5.0.35_linux_64_rhel6.x-1.run
:src_dir: .
:type: libs
:version: '5.0.35'
:compilers:
  bin:
:install: |
  mkdir -p <%= dest_dir %>/{toolkit,samples,installers}
  /bin/sh cuda_5.0.35_linux_64_rhel6.x-1.run --extract=<%= dest_dir%>/installers/
  # this next stage creates a symlink in /usr/local but theres nothing we can do about that without making unsafe assumptions
  /bin/sh <%=dest_dir%>/installers/cudatoolkit_5.0.35_linux_64_rhel6.x.run -noprompt -prefix=<%=dest_dir%>/toolkit
  /bin/sh <%=dest_dir%>/installers/cuda-samples_5.0.35_linux.run -noprompt -cudaprefix=<%=dest_dir%>/toolkit -prefix=<%=dest_dir%>/samples
  # create link for dev driver
  (cd <%=dest_dir%>/installers && ln -snf devdriver_5.0_linux_64_304.54.run devdriver.run)
  # fix cuda install path in common makefile
  # d "<%= dest_dir %>/sdk"
  #for a in C/common/*.mk OpenCL/common/common_opencl.mk CUDALibraries/common/common_cudalib.mk CUDALibraries/common/common_npplib.mk CUDALibraries/common/UtilNPP/defines.mk; do
  #  sed -e "s|^CUDA_INSTALL_PATH.*$|CUDA_INSTALL_PATH ?= <%= dest_dir %>/toolkit/|g" -i $a
  #done
:module: |
  setenv ${appcaps}DIR ${appdir}
  setenv ${appcaps}BIN ${appdir}/toolkit/bin
  setenv ${appcaps}SDK ${appdir}/samples
  setenv ${appcaps}SAMPLES ${appdir}/samples

  setenv CUDA_DIR ${appdir}/toolkit
  setenv CUDA_HOME ${appdir}/toolkit
  setenv CUDA_SDK ${appdir}/samples
  setenv CUDA_SAMPLES ${appdir}/samples
  setenv NVIDIA_DRIVER ${appdir}/installers/

  prepend-path PATH ${appdir}/toolkit/bin
  prepend-path LD_LIBRARY_PATH ${appdir}/toolkit/lib
  prepend-path LD_LIBRARY_PATH ${appdir}/toolkit/lib64

