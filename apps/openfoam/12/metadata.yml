---
:schema: 1
:license: GPL
:summary: A C++ toolbox for the development of customized numerical solvers, and pre-/post-processing utilities
:url: http://www.openfoam.com/
:description: |
  OpenFOAM (Open Field Operation and Manipulation) is a C++ toolbox
  for the development of customized numerical solvers, and
  pre-/post-processing utilities for the solution of continuum
  mechanics problems, including computational fluid dynamics (CFD).
:group: Fluid Dynamics
:requirements:
  :build:
    - mpi/openmpi
    - apps/cmake
    - libs/qt > 5.12.0
  :runtime:
    - mpi/openmpi
    - libs/qt > 5.12.0
:changelog: |
  * Fri Jul 12 2024 - Rob Brown <rob.brown@alces-flight.com>
    - Bumped to v12
  * Tue Jul  2 2024 - Rob Brown <rob.brown@alces-flight.com>
    - Bumped to v11
  * Mon Mar 18 2024 - Rob Brown <rob.brown@alces-flight.com>
    - Bumped to v10
  * Fri Aug 27 2021 - Rob Brown <rob.brown@alces-flight.com>
    - Bumped to v9
  * Fri Aug 28 2020 - Rob Brown <rob.brown@alces-flight.com>
    - Bumped to v7
  * Thu Aug 17 2017 - Ruan G. Ellis <ruan.ellis@alces-software.com>
    - Bumped to latest v5.0 version
  * Mon Mar 27 2017 - Ruan G. Ellis <ruan.ellis@alces-software.com>
    - Bumped to v4.1
  * Thu Jul 27 2016 - Ruan G. Ellis <ruan.ellis@alces-software.com>
    - Bumped to v4.0.0
    - Enable ParaView build
    - Added libraries to LD_LIBRARY_PATH 
    - Hacked it about a bit to not require building external 3rd party
      stuff so much, just use the included packages
  * Wed May 25 2016 - Ruan G. Ellis <ruan.ellis@alces-software.com>
    - Bumped to v3.0.1
    - Removed metisDecomposer build due to latest version requiring patching
    - Enabled parallel build to speed up build process
  * Mon Aug 19 2013 - James Donohue <james.donohue@alces-software.com>
    - Fixed typo in compiler check output
  * Mon Aug  5 2013 - James Donohue <james.donohue@alces-software.com>
    - Bumped to v2.2.1
    - Removed incomplete ParaView setup
    - Added GCC version check to prevent OpenFOAM from being installed
      unless a compatible version is installed
    - Additional patch to METIS decomposer due to it apparently not
      having been updated for latest internal API
  * Wed Nov 21 2012 - Mark J. Titorenko <mark.titorenko@alces-software.com>
    - Bumped to v2.1.1
  * Wed Nov 21 2012 - Mark J. Titorenko <mark.titorenko@alces-software.com>
    - Added dependency on libs/scotch in order to build the SCOTCH
      decomposer
    - Added dependency on libs/mgridgen in order to build the MGridGen
      agglomeration method
    - Bundle OpenFOAM compatible version of METIS in order to build
      the METIS decomposer
    - Tweak build environment variables to ensure PStream is built
      correctly
    - Changed dummy library path from a prepend to an append to ensure
      real libraries are always located first
  * Thu Sep  6 2012 - Mark J. Titorenko <mark.titorenko@alces-software.com>
    - Refactored to packager style
  * Fri Mar 23 2012 - Mark J. Titorenko <mark.titorenko@alces-software.com>
    - First created
:src: OpenFOAM-12.tar.gz 
:src_dir: OpenFOAM-12-version-12
:type: apps
:version: '12'
:sources:
  - ThirdParty-12.tar.gz
  - metis-5.1.0.tar.gz
#:patches:
#  - openfoam-mgridgen.patch1
:compilers:
  # GCC >= 4.5.0 is required
  gcc:
:dependencies:
  :build:
    el:
      - zlib
      - mesa-libGL
      - mesa-libGLU
      - mesa-libOSMesa
      - libXt
  :runtime:
    el:
      - zlib-devel
      - flex
      - bison
      - mesa-libGL-devel
      - mesa-libGLU-devel
      - mesa-libOSMesa-devel
      - libXt-devel
:compile: |
  #Find out the GCC version...
  gcc_major=$(gcc -dumpversion | cut -f1 -d'.')
  gcc_minor=$(gcc -dumpversion | cut -f2 -d'.')
  if [[ "$gcc_major" -lt "4" || ("$gcc_major" -eq "4" && "$gcc_minor" -lt "5") ]]; then 
    echo GCC version is $gcc_major.$gcc_minor but OpenFOAM requires at least v4.5.0 to compile. If a compatible version is available, please specify it with --compiler gcc/x.y.z >/dev/stderr
    exit 1
  fi

  mkdir OpenFOAM-12
  # Move everything into the newly created directory, excluding itself
  shopt -s extglob
  mv -v !(OpenFOAM-12) OpenFOAM-12/.
  # Turn back off the shell option to enable this as weird stuff might happen else...
  shopt -u extglob
  # Extract the Third Party sources...
  tar -zxvf <%= source('ThirdParty-12.tar.gz') %>
  export TOPDIR=`pwd`
  # Need to rename 
  mv ThirdParty-12-version-12 ThirdParty-12 <%= redirect(:setup) %>

  ### Maybe not here, needs putting just before we kick off building ThirdParty
  cd ThirdParty-12 <%= redirect(:setup) %>
  tar xvzf <%= source('metis-5.1.0.tar.gz') %> <%= redirect(:setup) %>
  cd .. <%= redirect(:setup) %>
  
  #Check whether we want to build multi-threaded...
  if [ -z "$GRIDWARE_MAKE_THREADS" ]; then
    export BUILD_THREADS=1 <%= redirect(:setup) %>
  else 
    export BUILD_THREADS=$GRIDWARE_MAKE_THREADS <%= redirect(:setup) %>
  fi
  export FOAM_INST_DIR="${TOPDIR}" <%= redirect(:setup) %>

  # Need to do this waltz as OpenFOAM unsets MPI_HOME :-/
  echo "Unset MPI Home" <%= redirect(:stage) %>
  old_MPI_HOME=${MPI_HOME} <%= redirect(:setup) %>
  echo "Sourcing bashrc" <%= redirect(:stage) %>

  #Doing this because unalias is called on aliases that don't exist to ensure that they are removed... This exits non-zero 
  set +e
  source ${TOPDIR}/OpenFOAM-12/etc/bashrc <%= redirect(:bashrc) %>
  set -e 
  echo "Test" <%= redirect(:bashrc) %>
  echo "Sourcing bashrc complete" <%= redirect(:stage) %>
  export MPI_HOME=${old_MPI_HOME} <%= redirect(:setup) %>

  unset old_MPI_HOME <%= redirect(:setup) %>
  export MAKEFLAGS="-j $BUILD_THREADS" <%= redirect(:setup) %> 
  cd ThirdParty-12 <%= redirect(:setup) %>

  # Now we can actually build the ThirdParty sources..
  echo "Starting Build" <%= redirect(:stage) %>
  ./Allwmake <%= redirect(:thirdpartymake) %>

  # Now the built in ParaView - this means we can run paraFoam without needing to use the '-builtin' option.
  export QT_INSTALL_PLUGINS=$QTDIR/plugins
  ./makeParaView -osmesa -mpi -qmake "$QTBIN"/qmake \
    QT_MOC_EXECUTABLE=$QTBIN/moc \
    QT_RCC_EXECUTABLE=$QTBIN/rcc \
    QT_UIC_EXECUTABLE=$QTBIN/uic \
    <%= redirect(:paraviewmake) %>

  # Remove obsolete include line from paraview-config.cmake that
  # breaks building openfoam vtkPVFoam and maybe more
  sed -i -e 's/  include.*Client-targets.cmake.*//g' platforms/linux64Gcc/ParaView-5.10.1/lib64/cmake/paraview-5.10/paraview-config.cmake

  old_MPI_HOME=${MPI_HOME}
  source ${TOPDIR}/OpenFOAM-12/etc/bashrc
  export MPI_HOME=${old_MPI_HOME}
  unset old_MPI_HOME

  # Build OpenFoam!
  cd ../OpenFOAM-12 
  ./Allwmake <%= redirect(:openfoammake) %>

  # Make ParaView libs
  cd $FOAM_UTILITIES/postProcessing/graphics/PVReaders 
  ./Allwmake <%= redirect(:pvreadermake) %>
:install: |
  mkdir <%= dest_dir %>/3rdparty
  cp -rv ./OpenFOAM-12/* <%= dest_dir %> <%= redirect(:install) %>
  cp -rv ./ThirdParty-12/* <%= dest_dir %>/3rdparty <%= redirect(:install_3rdparty) %>
:module: |
  setenv ${appcaps}DIR ${appdir}
  setenv ${appcaps}BIN ${appdir}/bin

  setenv FOAM_APP ${appdir}/applications
  setenv FOAM_APPBIN ${appdir}/platforms/linux64GccDPInt32Opt/bin
  setenv FOAM_EXT_LIBBIN ${appdir}/3rdparty/platforms/linux64GccDPInt32Opt/lib
  setenv FOAM_INST_DIR ${appdir}
  setenv FOAM_JOB_DIR ${appdir}/jobControl
  setenv FOAM_LIBBIN ${appdir}/platforms/linux64GccDPInt32Opt/lib
  setenv FOAM_MPI openmpi
  setenv FOAM_SETTINGS ""
  setenv FOAM_SIGFPE ""
  setenv FOAM_SOLVERS ${appdir}/applications/solvers
  setenv FOAM_SRC ${appdir}/src
  setenv FOAM_TUTORIALS ${appdir}/tutorials
  setenv FOAM_UTILITIES ${appdir}/applications/utilities

  # dummy goes at the end of the LD_LIBRARY_PATH to ensure that all
  # other locations are tried first before falling back to dummies.
  append-path LD_LIBRARY_PATH ${appdir}/platforms/linux64GccDPInt32Opt/lib/dummy
  prepend-path LD_LIBRARY_PATH ${appdir}/platforms/linux64GccDPInt32Opt/lib
  prepend-path LD_LIBRARY_PATH ${appdir}/platforms/linux64GccDPInt32Opt/lib/paraview-5.10
  prepend-path LD_LIBRARY_PATH ${appdir}/platforms/linux64GccDPInt32Opt/lib/openmpi-system
  prepend-path LD_LIBRARY_PATH ${appdir}/3rdparty/build/linux64Gcc/ParaView-5.10.1/lib
  prepend-path LD_LIBRARY_PATH ${appdir}/3rdparty/metis-5.1.0/build/Linux-x86_64/libmetis
  prepend-path LD_LIBRARY_PATH ${appdir}/3rdparty/platforms/linux64Gcc/boost_1_64_0/lib64
  prepend-path LD_LIBRARY_PATH ${appdir}/3rdparty/platforms/linux64Gcc/CGAL-4.10.0/lib64
  prepend-path LD_LIBRARY_PATH ${appdir}/3rdparty/platforms/linux64GccDPInt32/lib
  prepend-path LD_LIBRARY_PATH ${appdir}/3rdparty/platforms/linux64GccDPInt32/metis-5.1.0/lib
  prepend-path LD_LIBRARY_PATH ${appdir}/3rdparty/platforms/linux64GccDPInt32/lib/openmpi-system
  prepend-path LD_LIBRARY_PATH ${appdir}/3rdparty/platforms/linux64Gcc/ParaView-5.10.1/lib

  prepend-path PATH ${appdir}/bin
  prepend-path PATH ${appdir}/platforms/linux64GccDPInt32Opt/bin
  prepend-path PATH ${appdir}/3rdparty/build/linux64Gcc/ParaView-5.10.1/bin/

  if { [info exists ::env(MPI_HOME)] } {
    setenv MPI_ARCH_PATH $::env(MPI_HOME)
  }
  setenv MPI_BUFFER_SIZE 20000000
  if { [info exists ::env(MPI_HOME)] } {
    setenv OPAL_PREFIX $::env(MPI_HOME)
  }

  setenv WM_ARCH linux64
  setenv WM_ARCH_OPTION 64
  setenv WM_CC gcc
  setenv WM_CFLAGS '-m64 -fPIC'
  setenv WM_COMPILER Gcc
  setenv WM_COMPILER_LIB_ARCH 64
  setenv WM_COMPILE_OPTION Opt
  setenv WM_CXX g++
  setenv WM_CXXFLAGS '-m64 -fPIC'
  setenv WM_DIR ${appdir}/wmake
  setenv WM_LDFLAGS -m64
  setenv WM_LINK_LANGUAGE c++
  setenv WM_MPLIB OPENMPI
  setenv WM_OPTIONS linux64GccDPInt32Opt
  setenv WM_OSTYPE POSIX
  setenv WM_PRECISION_OPTION DP
  setenv WM_PROJECT OpenFOAM
  setenv WM_PROJECT_DIR ${appdir}
  setenv WM_PROJECT_INST_DIR ${appdir}
  setenv WM_PROJECT_VERSION ${version}
  setenv WM_THIRD_PARTY_DIR ${appdir}/3rdparty
  setenv PV_PLUGIN_PATH ${appdir}/platforms/linux64GccDPInt32Opt/lib/paraview-5.10
