---
:schema: 1
:license: GPL
:summary: A C++ toolbox for the development of customized numerical solvers, and pre-/post-processing utilities
:url: http://www.openfoam.com/
:description: |
  OpenFOAM (Open Field Operation and Manipulation) is a C++ toolbox
  for the development of customized numerical solvers, and
  pre-/post-processing utilities for the solution of continuum
  mechanics problems, including computational fluid dynamics (CFD).
:group: Physics
:requirements:
  :build:
    - mpi/openmpi
    - libs/scotch
    - libs/mgridgen
  :runtime:
    - mpi/openmpi
    - libs/scotch
    - libs/mgridgen
:changelog: |
  * Wed Nov 21 2012 - Mark J. Titorenko <mark.titorenko@alces-software.com>
    - Added dependency on libs/scotch in order to build the SCOTCH
      decomposer
    - Added dependency on libs/mgridgen in order to build the MGridGen
      agglomeration method
    - Bundle OpenFOAM compatible version of METIS in order to build
      the METIS decomposer
    - Tweak build environment variables to ensure PStream is built
      correctly
    - Changed dummy library path from a prepend to an append to ensure
      real libraries are always located first
  * Thu Sep  6 2012 - Mark J. Titorenko <mark.titorenko@alces-software.com>
    - Refactored to packager style
  * Fri Mar 23 2012 - Mark J. Titorenko <mark.titorenko@alces-software.com>
    - First created
:src: OpenFOAM-2.1.0.tgz
:src_dir: OpenFOAM-2.1.0
:type: apps
:version: '2.1.0'
:sources:
  - metis-5.0pre2.tar.gz
:patches:
  - openfoam-openmpi.patch1
  - openfoam-scotch.patch1
  - openfoam-metis.patch1
  - openfoam-mgridgen.patch1
:compilers:
  gcc:
:compile: |
  cd ..
  export TOPDIR=`pwd`
  
  tar xvzf <%= source('metis-5.0pre2.tar.gz') %>
  cd metis-5.0pre2
  patch -p1 < <%= source('metis-5.0pre2.patch') %> <%= redirect(:patch_metis) %>
  make all <%= redirect(:build_metis) %>

  cd "${TOPDIR}/OpenFOAM-2.1.0"
  export FOAM_INST_DIR="${TOPDIR}"
  # Need to do this waltz as OpenFOAM unsets MPI_HOME :-/
  old_MPI_HOME=${MPI_HOME}
  source etc/bashrc
  export MPI_HOME=${old_MPI_HOME}
  export SCOTCH_ROOT=${SCOTCHDIR}
  unset old_MPI_HOME
  ./Allwmake <%= redirect(:make) %>

  # Make the metis decomposer
  cd "${TOPDIR}/OpenFOAM-2.1.0/src/parallel/decompose/metisDecomp"
  wmake libso <%= redirect(:make_metisdecomp) %>

  # Make the mgridgen agglomeration method
  cd "${TOPDIR}/OpenFOAM-2.1.0/src/fvAgglomerationMethods/MGridGenGamgAgglomeration"
  wmake libso <%= redirect(:make_mgridgenagglomeration) %>

  cd "${TOPDIR}/OpenFOAM-2.1.0"
  mv platforms/linux64GccDPOpt/lib/openmpi-1.5.3 platforms/linux64GccDPOpt/lib/mpi
:install: |
  mkdir <%= dest_dir %>/3rdparty
  cp -r applications bin COPYING doc etc platforms README.* tutorials <%= dest_dir %>
:module: |
  setenv ${appcaps}DIR ${appdir}
  setenv ${appcaps}BIN ${appdir}/bin

  setenv FOAM_APP ${appdir}/applications
  setenv FOAM_APPBIN ${appdir}/platforms/linux64GccDPOpt/bin
  setenv FOAM_EXT_LIBBIN ${appdir}/3rdparty/platforms/linux64GccDPOpt/lib
  setenv FOAM_INST_DIR ${appdir}
  setenv FOAM_JOB_DIR ${appdir}/jobControl
  setenv FOAM_LIBBIN ${appdir}/platforms/linux64GccDPOpt/lib
  setenv FOAM_MPI openmpi
  setenv FOAM_SETTINGS ""
  setenv FOAM_SIGFPE ""
  setenv FOAM_SOLVERS ${appdir}/applications/solvers
  setenv FOAM_SRC ${appdir}/src
  setenv FOAM_TUTORIALS ${appdir}/tutorials
  setenv FOAM_UTILITIES ${appdir}/applications/utilities

  # dummy goes at the end of the LD_LIBRARY_PATH to ensure that all
  # other locations are tried first before falling back to dummies.
  append-path LD_LIBRARY_PATH ${appdir}/platforms/linux64GccDPOpt/lib/dummy
  prepend-path LD_LIBRARY_PATH ${appdir}/3rdparty/platforms/linux64GccDPOpt/lib
  prepend-path LD_LIBRARY_PATH ${appdir}/platforms/linux64GccDPOpt/lib/mpi
  prepend-path LD_LIBRARY_PATH ${appdir}/platforms/linux64GccDPOpt/lib

  setenv MPI_ARCH_PATH $::env(MPI_HOME)
  setenv MPI_BUFFER_SIZE 20000000
  setenv OPAL_PREFIX $::env(MPI_HOME)

  prepend-path PATH ${appdir}/bin
  prepend-path PATH ${appdir}/platforms/linux64GccDPOpt/bin

  setenv ParaView_DIR ${appdir}/3rdparty/platforms/linux64Gcc/paraview-3.12.0
  setenv ParaView_MAJOR 3.12
  setenv ParaView_VERSION 3.12.0

  setenv WM_ARCH linux64
  setenv WM_ARCH_OPTION 64
  setenv WM_CC gcc
  setenv WM_CFLAGS '-m64 -fPIC'
  setenv WM_COMPILER Gcc
  setenv WM_COMPILER_LIB_ARCH 64
  setenv WM_COMPILE_OPTION Opt
  setenv WM_CXX g++
  setenv WM_CXXFLAGS '-m64 -fPIC'
  setenv WM_DIR ${appdir}/wmake
  setenv WM_LDFLAGS -m64
  setenv WM_LINK_LANGUAGE c++
  setenv WM_MPLIB OPENMPI
  setenv WM_OPTIONS linux64GccDPOpt
  setenv WM_OSTYPE POSIX
  setenv WM_PRECISION_OPTION DP
  setenv WM_PROJECT OpenFOAM
  setenv WM_PROJECT_DIR ${appdir}
  setenv WM_PROJECT_INST_DIR ${appdir}
  setenv WM_PROJECT_VERSION ${version}
  setenv WM_THIRD_PARTY_DIR ${appdir}/3rdparty

  #foamPV () 
  #{ 
  #     . $WM_PROJECT_DIR/etc/config/paraview.sh ParaView_VERSION=$1;
  #     echo "paraview-$ParaView_VERSION  (major: $ParaView_MAJOR)"
  #}
