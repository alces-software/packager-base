---
:schema: 1
:title: MIRA
:license: GPLv2
:summary: Whole genome shotgun and EST sequence assembler
:url: http://sourceforge.net/projects/mira-assembler/
:description: |
  MIRA is a whole genome shotgun and EST sequence assembler for
  Sanger, 454, Solexa (Illumina), IonTorrent data and PacBio (the
  later at the moment only CCS and error-corrected CLR reads). It can
  be seen as a Swiss army knife of sequence assembly developed and
  used in the past 12 years to get assembly jobs done efficiently -
  and especially accurately. That is, without actually putting too
  much manual work into finishing the assembly.
:group: Bioinformatics
:changelog: |
  * Fri Dec  9 2016 Andrew Provis <andrew.provis@alces-software.com>
    - Updated example templates to Clusterware literal scripts
  * Thu Jun 26 2014 - Mark J. Titorenko <mark.titorenko@alces-software.com>
    - Updated to latest stable version 4.0.2
  * Thu Apr 10 2014 - James Donohue <james.donohue@alces-software.com>
    - Updated to latest stable version 4.0.1
    - Added example script
  * Thu Nov 29 2012 - Mark J. Titorenko <mark.titorenko@alces-software.com>
    - First created
:src: mira-4.0.2.tar.bz2
:src_dir: mira-4.0.2
:type: apps
:version: '4.0.2'
:requirements:
  :build:
    - libs/boost >= 1.49.0
    - libs/expat
  :runtime:
    - libs/boost >= 1.49.0
    - libs/expat
:compilers:
  gcc:
:dependencies:
  el:
    - zlib-devel
    - bzip2-devel
    - flex-devel
    - flex
    - vim-common
:sources:
  - mira.sh.md
  - mira.sh.tpl
:compile: |
  gcc_major=$(gcc -dumpversion | cut -f1 -d'.')
  gcc_minor=$(gcc -dumpversion | cut -f2 -d'.')
  if [[ "$gcc_major" -lt "4" || ("$gcc_major" -eq "4" && "$gcc_minor" -lt "6") ]]; then 
    echo GCC version is $gcc_major.$gcc_minor but MIRA requires at least v4.6.0 to compile. If a compatible version is available, please specify it with --compiler gcc/x.y.z >/dev/stderr
    exit 1
  fi

  sed -i '26 i #include <iostream>' src/progs/quirks.C

  ./configure --prefix="<%= dest_dir %>" --with-boost="${BOOSTDIR}" --with-expat=${EXPATDIR} <%= redirect(:configure) %>
  make <%= redirect(:compile) %>
  # XXX - build docbook docs?
:install: |
  make install <%= redirect(:install) %>
  mkdir <%= dest_dir %>/doc
  cp -av AUTHORS ChangeLog COPYING GETTING_STARTED HELP_WANTED NEWS README THANKS <%= dest_dir %>/doc <%= redirect(:install) %>
  cp -av minidemo <%= dest_dir %>/minidemo <%= redirect(:install) %>

  mkdir -pv <%= dest_dir %>/share/clusterware/templates <%= redirect(:install) %>
  mkdir -pv <%= dest_dir %>/share/clusterware/guides <%= redirect(:install) %>
  cp -v <%= source('mira.sh.tpl') %> <%= dest_dir %>/share/clusterware/templates <%= redirect(:install) %>
  cp -v <%= source('mira.sh.md') %> <%= dest_dir %>/share/clusterware/guides <%= redirect(:install) %>
:module: |
  setenv ${appcaps}DIR ${appdir}
  setenv ${appcaps}BIN ${appdir}/bin
  setenv ${appcaps}DOC ${appdir}/doc

  prepend-path PATH ${appdir}/bin

  setenv ${appcaps}TEMPLATES ${appdir}/share/clusterware/templates
  setenv ${appcaps}EXAMPLEDOCS ${appdir}/share/clusterware/guides
  prepend-path CW_DOCPATH ${appdir}/share/clusterware
