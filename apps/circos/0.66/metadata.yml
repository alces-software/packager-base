---
:schema: 1
:license: GPL
:title: Circos
:summary: A software package for visualizing data and information.
:url: http://circos.ca/
:description: |
  Circos is a software package for visualizing data and information.
  It visualizes data in a circular layout — this makes Circos ideal
  for exploring relationships between objects or positions. There are
  other reasons why a circular layout is advantageous, not the least
  being the fact that it is attractive.

  Circos is ideal for creating publication-quality infographics and
  illustrations with a high data-to-ink ratio, richly layered data and
  pleasant symmetries. You have fine control each element in the
  figure to tailor its focus points and detail to your audience.

  Circos is flexible. Although originally designed for visualizing
  genomic data, it can create figures from data in any field—from
  genomics to visualizing migration to mathematical art. If you have
  data that describes relationships or multi-layered annotations of
  one or more scales, Circos is for you.

  Circos can be automated. It is controlled by plain-text
  configuration files, which makes it easily incorporated into data
  acquisition, analysis and reporting pipelines (a data pipeline is a
  multi-step process in which data is analyzed by multiple and
  typically independent tools, each passing their output as the input
  to the next step).
:group: Visualization
:changelog: |
  * Mon May 19 2014 - James Donohue <james.donohue@alces-software.com>
    - First created
:src: circos-0.66.tgz
:src_dir: circos-0.66
:type: apps
:version: '0.66'
:requirements:
  :tool: apps/cpanminus
:compilers:
  noarch:
# requires perl-devel, gd-devel on build host and gd on nodes
:compile: |
  export TOPDIR=$(pwd)
  export PERL5LIB="${TOPDIR}/perl/lib/perl5"
  export PERL_CPANM_OPT="-l ${TOPDIR}/perl -n"
  failed_mods="$(cd bin; ./test.modules | grep fail | cut -d ' ' -f 2)"
  cpanm $failed_mods Set::IntSpan Math::Bezier <%= redirect(:cpanm) %>
  for a in bin/gddiag bin/circos etc/makehuesteps; do
    sed -e 's|#!/bin/env|#!/usr/bin/env|g' -i $a
  done
:install: |
  mkdir doc
  mv $(find . -maxdepth 1 -type f) doc
  cp -Rv * <%= dest_dir %> <%= redirect(:install) %>
:module: |
  setenv ${appcaps}DIR ${appdir}
  setenv ${appcaps}BIN ${appdir}/bin
  setenv ${appcaps}DOC ${appdir}/doc
  setenv ${appcaps}EXAMPLE ${appdir}/example

  prepend-path PERL5LIB ${appdir}/perl/lib/perl5
  prepend-path MANPATH ${appdir}/perl/man
  prepend-path PATH ${appdir}/perl/bin

  prepend-path PATH ${appdir}/bin
:example_scripts:
  - tags: ['script:type=batch']
    name: 'Circos demonstration usage'
    description: 'Execute Circos to produce an image using the bundled example configuration files and data'
    template: 'script:stub:simple'
    content: |
      #############################################
      # APPLICATION COMMANDS - change as required
      #############################################
      #
      # For full Circos usage information see:
      #   http://circos.ca/documentation/

      # Output directory
      OUTPUT_DIR="circos/output.${JOB_ID-${PORTAL_TASK_ID-$$}}"

      # Path to configuration file
      CONF_FILE=etc/circos.conf

      # Additional command-line options (circos -help for a list)
      #CIRCOS_OPTIONS=

      # Create output directory if it doesn't already exist
      mkdir -p $OUTPUT_DIR

      # Copy example configuration and data
      cd $OUTPUT_DIR
      cp -r $CIRCOSEXAMPLE/* .

      # Launch Circos
      circos -conf $CONF_FILE $CIRCOS_OPTIONS
