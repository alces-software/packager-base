---
:schema: 1
:license: GPLv2
:title: fREEDA
:summary: Multi-physics simulator
:url: http://www.freeda.org/
:description: |
  fREEDA(TM) is a multi-physics simulator under development by a user community
  from universities, research communities and laboratories. It uses state
  variables, local reference group concepts and automatic differentiation to
  capture multi-physics. As a result of this, model development is considerably
  simplified.

  This simulation approach represents a new approach since SPICE-like analyses
  were developed. The approach allows the modeling of virtually any physical
  model and the generic model evaluation mechanism in which the primitive model
  equations are wrapped in generic analysis specific functions, reduces the
  time required for computation and development.

  fREEDA(TM) implements several types of analyses. It implements a DC, Harmonic
  Balance, several Time marching transient and a unique wavelet analysis. It
  also implements several device models including common three and four
  terminal transistors, transmission line, Foster's canonical form and diodes -
  electronic, optical and tunnel types.
:group: Physics
:changelog: |
  * Thu Oct 27 2016 - Andrew Provis <andrew.provis@alces-software.com>
    - Updated example templates to Clusterware literal scripts
  * Wed Apr  1 2015 - James Donohue <james.donohue@alces-software.com>
    - First created
:src: freeda-2.0.tar.gz
:src_dir: freeda-2.0
:type: apps
:version: '2.0'
:patches:
  #Â Patch to use Gridware FFTW2 in place of bundled version and use Trilinos 
  # headers from installed Gridware package instead of source tree
  - makefile.defs.patch
:dependencies:
  el:
    - gcc-c++
    - bison
    - flex
:requirements:
  :build:
    - libs/blas
    - libs/lapack
    - libs/fftw2_double
    - libs/trilinos = 10.0.2
  :runtime:
    - libs/lapack
    - libs/fftw2_double
:compilers:
  gcc:
:sources:
  - freeda.sh.md
  - freeda.sh.tpl
:compile: |
  cd simulator
  make <%= redirect(:make) %>
:install: |
  cp -rv doc <%= dest_dir %> <%= redirect(:install) %>
  cp -rv test <%= dest_dir %> <%= redirect(:install) %>
  mkdir -p <%= dest_dir %>/bin
  cp -v simulator/freeda <%= dest_dir %>/bin <%= redirect(:install) %>

  mkdir -pv <%= dest_dir %>/share/clusterware/templates <%= redirect(:install) %>
  mkdir -pv <%= dest_dir %>/share/clusterware/guides <%= redirect(:install) %>
  cp -v <%= source('freeda.sh.tpl') %> <%= dest_dir %>/share/clusterware/templates <%= redirect(:install) %>
  cp -v <%= source('freeda.sh.md') %> <%= dest_dir %>/share/clusterware/guides <%= redirect(:install) %>
:module: |
  setenv ${appcaps}DIR ${appdir}
  setenv ${appcaps}BIN ${appdir}/bin
  setenv ${appcaps}DOC ${appdir}/doc
  setenv ${appcaps}TEST ${appdir}/test

  prepend-path PATH ${appdir}/bin

  setenv ${appcaps}TEMPLATES ${appdir}/share/clusterware/templates
  setenv ${appcaps}EXAMPLEDOCS ${appdir}/share/clusterware/guides
  prepend-path CW_DOCPATH ${appdir}/share/clusterware
