---
:schema: 1
:license: GPLv3
:title: ArtificialFastqGenerator
:summary: Ouputs artificial FASTQ files derived from a reference genome
:url: http://sourceforge.net/projects/artfastqgen/
:description: |
  ArtificialFastqGenerator takes the reference genome (in FASTA
  format) as input and outputs artificial FASTQ files in the Sanger
  format. It can accept Phred base quality scores from existing FASTQ
  files, and use them to simulate sequencing errors. Since the
  artificial FASTQs are derived from the reference genome, the
  reference genome provides a gold-standard for calling variants
  (Single Nucleotide Polymorphisms (SNPs) and insertions and deletions
  (indels)). This enables evaluation of a Next Generation Sequencing
  (NGS) analysis pipeline which aligns reads to the reference genome
  and then calls the variants.
:group: Bioinformatics
:changelog: |
  * Wed Mar  6 2013 - Mark J. Titorenko <mark.titorenko@alces-software.com>
    - First created
:src: ArtificialFastqGenerator.zip
:src_dir: .
:type: apps
:version: '20121120'
:compilers:
  noarch:
:compile: |
  # No-op; this is a distribution of a java application.
:install: |
  mkdir -p <%= dest_dir %>/{bin,java,example}
  cp -Rv doc <%= dest_dir %> <%= redirect(:install) %>
  cp -v *.txt <%= dest_dir %>/doc <%= redirect(:install) %>
  cp -v *.fast[aq] <%= dest_dir %>/example <%= redirect(:install) %>
  cp -v *.jar <%= dest_dir %>/java <%= redirect(:install) %>
  find <%= dest_dir %> -type f -exec chmod a-x {} ';'
  cat <<EOF > <%= dest_dir %>/bin/ArtificialFastqGenerator
  #!/bin/bash
  exec java `eval echo $ARTFASTQGEN_JAVA_OPTS` -jar "<%= dest_dir %>/java/ArtificialFastqGenerator.jar" "$@"  
  EOF
  chmod 755 <%= dest_dir %>/bin/ArtificialFastqGenerator
  ln -s ArtificialFastqGenerator <%= dest_dir %>/bin/artfastqgen
:module: |
  set JAVA_OPTS \$${appcaps}_JAVA_OPTS

  setenv ${appcaps}_JAVA_MEM_MX 2g

  if { [info exists ::env(GRIDWARE_TMPDIR)] } {
    setenv ${appcaps}_JAVA_TMPDIR $::env(GRIDWARE_TMPDIR)
  } elseif { [info exists ::env(TMPDIR)] } {
    setenv ${appcaps}_JAVA_TMPDIR $::env(TMPDIR)
  } else { 
    setenv ${appcaps}_JAVA_TMPDIR "/tmp"
  }

  setenv ${appcaps}_JAVA_OPTS "-Xmx\$${appcaps}_JAVA_MEM_MX -Djava.io.tmpdir=\$${appcaps}_JAVA_TMPDIR"

  setenv ${appcaps}DIR ${appdir}
  setenv ${appcaps}BIN ${appdir}/bin
  setenv ${appcaps}DOC ${appdir}/doc
  setenv ${appcaps}JAVA ${appdir}/java
  setenv ${appcaps}EXAMPLE ${appdir}/example

  prepend-path PATH ${appdir}/bin
