---
:schema: 1
:license: GPL
:name: Manta
:summary: Structural Variant Caller 
:url: https://github.com/Illumina/manta
:description: |
  Manta calls structural variants (SVs) and indels from 
  mapped paired-end sequencing reads. It is optimized 
  for analysis of germline variation in small sets of 
  individuals and somatic variation in tumor/normal 
  sample pairs. Manta discovers, assembles and scores 
  large-scale SVs, medium-sized indels and large 
  insertions within a single efficient workflow. The 
  method is designed for rapid analysis on standard 
  compute hardware: NA12878 at 50x genomic coverage is 
  analyzed in less than 20 minutes on a 20 core server, 
  and most WGS tumor/normal analyses can be completed 
  within 2 hours. Manta combines paired and split-read 
  evidence during SV discovery and scoring to improve 
  accuracy, but does not require split-reads or successful 
  breakpoint assemblies to report a variant in cases where 
  there is strong evidence otherwise. It provides scoring 
  models for germline variants in small sets of diploid 
  samples and somatic variants in matched tumor/normal 
  sample pairs. There is experimental support for analysis 
  of unmatched tumor samples as well. Manta accepts input 
  read mappings from BAM or CRAM files and reports all SV 
  and indel inferences in VCF 4.1 format.
:type: apps
:group: Bioinformatics
:changelog: |
  * Mon Jun 06 2016 - Ruan G. Ellis <ruan.ellis@alces-software.com>
    - First created
:src: v0.29.6.tar.gz  
:src_dir: manta-0.29.6 
:version: '0.29.6'
:compilers:
  gcc:
:requirements:
  :build:
    - apps/python
    - libs/boost <= 1.58.0 
  :runtime:
    - apps/python
    - libs/boost <= 1.58.0
:dependencies:
  el:
    - gcc-c++
    - bzip2
    - libstdc++-static
:compile: |
  if [ -z "$GRIDWARE_MAKE_THREADS" ]; then
    export BUILD_THREADS=1
  else 
    export BUILD_THREADS=$GRIDWARE_MAKE_THREADS
  fi
  mkdir build && cd build <%= redirect(:configure) %>
  ../configure --prefix=<%= dest_dir %> --jobs=$BUILD_THREADS <%= redirect(:configure) %>
  make -j $BUILD_THREADS <%= redirect(:make) %>
:install: |
  mkdir -p <%= dest_dir %> <%= redirect(:install) %>
  cd build <%= redirect(:install) %>
  make install <%= redirect(:install) %> 
:module: |
  setenv ${appcaps}DIR ${appdir}
  setenv ${appcaps}BIN ${appdir}/bin
  setenv ${appcaps}LIB ${appdir}/lib
  setenv ${appcaps}SHARE ${appdir}/share

  prepend-path LD_LIBRARY_PATH ${appdir}/lib
  prepend-path PATH ${appdir}/bin
