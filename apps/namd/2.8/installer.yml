---
:src: NAMD_2.8_Source.tar.gz
:src_dir: NAMD_2.8_Source
:type: apps
:version: '2.8'
:compilers:
  gcc:
:variants:
  net:
  mpi:
:compile: |
  CHARMTAR=charm-*.tar
  tar xf $CHARMTAR
  cd `basename $CHARMTAR .tar`
  ./build charm++ <%= variant_name %>-linux-x86_64 --no-build-shared --with-production <%= redirect(:charm_build) %>
  cd ..
  sed -i -e 's|FFTDIR=.*|FFTDIR=$(FFTW)|g;s|-ls|-l|g;s|\(FFTFLAGS=.*\)|\1 -DNAMD_FFTW_NO_TYPE_PREFIX|g' arch/Linux-x86_64.fftw
  sed -i -e 's|TCLDIR=.*|TCLDIR=/usr|g;s|lib -ltcl8.3|lib64 -ltcl8.5|g' arch/Linux-x86_64.tcl
  ./config Linux-x86_64-g++ --charm-arch <%= variant_name %>-linux-x86_64 <%= redirect(:config) %>
  cd Linux-x86_64-g++
  make <%= redirect(:make) %>
:install: |
  mkdir -p <%= dest_dir %>/bin
  cd Linux-x86_64-g++
  for a in charmrun flipbinpdb flipdcd namd2 psfgen; do
    install -D -m 755 $a <%= dest_dir %>/bin/$a
  done
  cd ..
  cp -r plugins <%= dest_dir %>/plugins
  cp -r psfgen <%= dest_dir %>/sb
:module: |
  #%Module1.0#####################################################################
  ##
  ## Alces HPC Software Stack - Application module file
  ## Copyright (c) 2008-2012 Alces Software Ltd
  ##
  ################################################################################
  proc ModulesHelp { } {
          global app
          global version
          global appcaps
          global appdir

          puts stderr "Adds `$app-$version' to your environment variables"
          puts stderr ""
          puts stderr "##############"
          puts stderr "ENV after load"
          puts stderr "##############"
          puts stderr "${appcaps}DIR -> base path of application"
          puts stderr "${appcaps}BIN -> bin path of application"
          puts stderr "Adds ${appcaps}BIN to PATH"
          puts stderr ""
  }

  <% if variant_name == 'mpi' %>
    prereq mpi/<%= compiler_name %>/openmpi
    prereq libs/<%= compiler_name %>/fftw2/float-mpi
  <% else %>
    prereq libs/<%= compiler_name %>/fftw2/float
  <% end %>

  set     app      <%= package.name %>
  set     version  <%= version %>
  set     appcaps  <%= package.caps_name %>
  set     appdir   <%= dest_dir %>

  module-whatis   "loads the necessary `$app-$version' setup environment"

  setenv ${appcaps}DIR ${appdir}
  setenv ${appcaps}BIN ${appdir}/bin

  prepend-path PATH ${appdir}/bin
