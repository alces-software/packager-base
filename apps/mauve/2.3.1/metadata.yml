---
:schema: 1
:title: Mauve
:license: GPLv2
:summary: Mauve Genome Alignment Software
:url: http://gel.ahabs.wisc.edu/mauve/
:description: |
  Mauve is a system for efficiently constructing multiple genome
  alignments in the presence of large-scale evolutionary events such
  as rearrangement and inversion. Multiple genome alignment provides a
  basis for research into comparative genomics and the study of
  evolutionary dynamics.  Aligning whole genomes is a fundamentally
  different problem than aligning short sequences.

  Mauve has been developed with the idea that a multiple genome
  aligner should require only modest computational resources. It
  employs algorithmic techniques that scale well in the amount of
  sequence being aligned. For example, a pair of Y. pestis genomes can
  be aligned in under a minute, while a group of 9 divergent
  Enterobacterial genomes can be aligned in a few hours.
:group: Bioinformatics
:changelog: |
  * Wed Jul 03 2013 - James Donohue <james.donohue@alces-software.com>
    - First created
:src: mauve_linux_2.3.1.tar.gz
:src_dir: mauve_2.3.1
:type: apps
:version: '2.3.1'
:compilers:
  bin:
:compile: |
  # no-op; this is a distribution of a binary + Java application
  # (rationale: last binary release 3yo; no recent stable source)
:install: |
  mkdir -p <%= dest_dir %>/{bin,java,doc}
  cp -rv *.jar ext/ <%= dest_dir %>/java <%= redirect(:install) %>
  # Discarding 32-bit versions
  cp -v linux-x64/mauveAligner linux-x64/progressiveMauve <%= dest_dir %>/bin <%= redirect(:install) %>
  cp -v ChangeLog.html COPYING mauve_user_guide.pdf README <%= dest_dir %>/doc <%= redirect(:install) %>
  cat <<\EOF > <%= dest_dir %>/bin/Mauve
  #!/bin/bash
  exec java `eval echo $MAUVE_JAVA_OPTS` -DmauveDir=$MAUVEBIN -jar "<%= dest_dir %>/java/Mauve.jar" "$@"
  EOF
  chmod 755 <%= dest_dir %>/bin/Mauve
:module: |
  set JAVA_OPTS \$${appcaps}_JAVA_OPTS

  setenv ${appcaps}_JAVA_MEM_MX 2g

  if { [info exists ::env(GRIDWARE_TMPDIR)] } {
    setenv ${appcaps}_JAVA_TMPDIR $::env(GRIDWARE_TMPDIR)
  } elseif { [info exists ::env(TMPDIR)] } {
    setenv ${appcaps}_JAVA_TMPDIR $::env(TMPDIR)
  } else { 
  setenv ${appcaps}_JAVA_TMPDIR "/tmp"
  }

  setenv ${appcaps}_JAVA_OPTS "-Xmx\$${appcaps}_JAVA_MEM_MX -Djava.io.tmpdir=\$${appcaps}_JAVA_TMPDIR"

  setenv ${appcaps}DIR ${appdir}
  setenv ${appcaps}BIN ${appdir}/bin
  setenv ${appcaps}JAVA ${appdir}/java
  setenv ${appcaps}DOC ${appdir}/doc

  prepend-path PATH ${appdir}/bin

