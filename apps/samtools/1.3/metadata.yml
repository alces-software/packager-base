---
:license: MIT
:summary: Provides various utilities for manipulating alignments in the SAM format, including sorting, merging, indexing and generating alignments in a per-position format
:url: http://www.htslib.org/
:description: |
  SAM (Sequence Alignment/Map) format is a generic format for storing
  large nucleotide sequence alignments. SAM aims to be a format that:

    * Is flexible enough to store all the alignment information
      generated by various alignment programs
    * Is simple enough to be easily generated by alignment programs or
      converted from existing alignment formats
    * Is compact in file size
    * Allows most of operations on the alignment to work on a stream
      without loading the whole alignment into memory
    * Allows the file to be indexed by genomic position to efficiently
      retrieve all reads aligning to a locus

  SAM Tools provide various utilities for manipulating alignments in
  the SAM format, including sorting, merging, indexing and generating
  alignments in a per-position format.
:group: Bioinformatics
:changelog: |
  * Fri May 29 2015 Ruan G. Ellis <ruan.ellis@alces-software.com>
    - Bumped to latest 1.3 version and included OS dependencies
  * Fri May 29 2015 Ruan G. Ellis <ruan.ellis@alces-software.com>
    - Bumped to latest 1.2 version
  * Thu Jan  8 2015 Mark J. Titorenko <mark.titorenko@alces-software.com>
    - Bumped to latest 1.1 version
  * Wed Sep  3 2014 Ben Armston <ben.armston@alces-software.com>
    - Package for v1.0
    - Added a second example script
  * Wed Mar  5 2014 James Donohue <james.donohue@alces-software.com>
    - Added example script
  * Thu Oct 24 2013 Mark J. Titorenko <mark.titorenko@alces-software.com>
    - add missing bcftools/vcfutils.pl to bin directory
  * Thu Apr  4 2013 James Donohue <james.donohue@alces-software.com>
    - updated to 0.1.19 and added more installation logging
  * Wed Nov 21 2012 Mark J. Titorenko <mark.titorenko@alces-software.com>
    - add $SAMTOOLSLIB to LD_LIBRARY_PATH
  * Thu Oct 25 2012 Mark J. Titorenko <mark.titorenko@alces-software.com>
    - Package for v0.1.8
  * Thu Oct 25 2012 Mark J. Titorenko <mark.titorenko@alces-software.com>
    - add missing varfilter.py to bin directory
    - sed hashbang lines for perl and python scripts to use env
  * Wed Oct 10 2012 Mark J. Titorenko <mark.titorenko@alces-software.com>
    - additionally enable shared library build
  * Wed Aug 15 2012 Mark J. Titorenko <mark.titorenko@alces-software.com>
    - updated to 0.1.18
    - refactored to use packager style
  * Thu Jul 14 2011 Steve Norledge
    - updated to 0.1.17
    - added latest link
  * Tue Feb 22 2011 Steve Norledge
    - First created
:src: samtools-1.3.tar.bz2
:src_dir: samtools-1.3
:type: apps
:version: '1.3'
:compilers:
  gcc:
:dependencies:
  el:
    - zlib-devel
    - ncurses-devel
:compile: |
  sed -i -e 's|^CFLAGS=.*|CFLAGS= -g -Wall -O2 -fPIC|g' Makefile
  make <%= redirect(:make) %>
  # sed #!s to use env
  for a in misc/*.pl; do
    sed -e 's|#!.*/usr/bin/perl.*|#!/usr/bin/env perl|g' -i $a
  done
  for a in misc/*.py; do
    sed -e 's|#!.*|#!/usr/bin/env python|g' -i $a
  done
:install: |
  make prefix=<%= dest_dir %> install
  mkdir -p <%= dest_dir %>/include <%= dest_dir %>/doc <%= dest_dir %>/lib
  cp AUTHORS LICENSE NEWS <%= dest_dir %>/doc
  cp *.a <%= dest_dir %>/lib
  cp *.h <%= dest_dir %>/include
  cp -r examples <%= dest_dir %>
:module: |
  setenv ${appcaps}DIR ${appdir}
  setenv ${appcaps}BIN ${appdir}/bin
  setenv ${appcaps}LIB ${appdir}/lib
  setenv ${appcaps}INCLUDE ${appdir}/include
  setenv ${appcaps}EXAMPLES ${appdir}/examples
  setenv ${appcaps} ${appdir}/lib/libbam.a

  prepend-path PATH ${appdir}/bin
  prepend-path MANPATH ${appdir}/share/man
  prepend-path LD_LIBRARY_PATH ${appdir}/lib
:example_scripts:
  - tags: ['script:type=batch']
    name: 'samtools view; convert SAM to BAM'
    description: 'Execute samtools view command to convert a SAM file to a BAM file'
    template: 'script:stub:simple'
    content: |
      #############################################
      # APPLICATION COMMANDS - change as required
      #############################################
      #
      # samtools offers many different commands; this example script demonstrates
      # using the 'view' command to convert a SAM file to a BAM file.
      #
      # For detailed samtools usage information see:
      #   http://www.htslib.org/doc/

      # Output directory
      OUTPUT_DIR="samtools/output.${JOB_ID-${PORTAL_TASK_ID-$$}}"

      # Input SAM file
      INPUT_FILE=$SAMTOOLSDIR/examples/toy.sam

      # Output BAM file
      OUTPUT_FILE=$OUTPUT_DIR/toy.bam

      # Additional command-line options (samtools -h for a list)
      SAMTOOLS_OPTIONS="-bS"

      mkdir -p $OUTPUT_DIR
      samtools view $SAMTOOLS_OPTIONS $INPUT_FILE -o $OUTPUT_FILE
  - tags: ['script:type=batch']
    name: 'samtools; create VCF file of variants'
    description: |
      Execute samtools mpileup command to create a VCF file of variants. It is
      first necessary to create a BAM file from a FASTA and SAM file.
    template: 'script:stub:simple'
    content: |
      #############################################
      # APPLICATION COMMANDS - change as required
      #############################################
      #
      # samtools offers many different commands; this example script
      # demonstrates using the 'mpileup' command to create a VCF file of
      # variants from a FASTA file and a BAM file.
      #
      # For full samtools usage information see:
      #   http://www.htslib.org/doc/

      # File $SAMTOOLSEXAMPLES/ex1.fa contains two sequences cut from the
      # human genome build36.  They were exatracted with command:
      #
      #     samtools faidx human_b36.fa 2:2043966-2045540 20:67967-69550
      #
      # Sequence names were changed manually for simplicity. File
      # $SAMTOOLSEXAMPLES/ex1.sam.gz contains MAQ alignments extracted with:
      #
      #    (samtools view NA18507_maq.bam 2:2044001-2045500;
      #     samtools view NA18507_maq.bam 20:68001-69500)
      #
      # and processed with `samtools fixmate' to make it self-consistent as a
      # standalone alignment.

      # Output directory
      OUTPUT_DIR="samtools/output.${JOB_ID-${PORTAL_TASK_ID-$$}}"

      # Create the output/working data directory
      mkdir -p "$OUTPUT_DIR"
      cd "$OUTPUT_DIR"

      # Copy in the example input files
      cp "$SAMTOOLSEXAMPLES"/ex1.* .

      FASTA_FILE=ex1.fa
      SAM_FILE=ex1.sam.gz
      INDEXED_FASTA=ex1.fa.fai
      BAM_FILE=ex1.bam
      UNCOMPRESSED_VCF=ex1.vcf

      # Index the reference FASTA.
      samtools faidx "$FASTA_FILE"

      # Convert the (headerless) SAM file to BAM.  Note if we had used
      # "samtools view -h" above to create the ex1.sam.gz then we could omit
      # the "-t ex1.fa.fai" option here.
      samtools view -S -b -t "$INDEXED_FASTA" -o "$BAM_FILE" "$SAM_FILE"

      # Build an index for the BAM file:
      samtools index "$BAM_FILE"

      # Generate an uncompressed VCF file of variants:
      samtools mpileup -vu -f "$FASTA_FILE" "$BAM_FILE" > "$UNCOMPRESSED_VCF"

      echo ""
      echo "-----------------"
      echo " samtools completed"
      echo "-----------------"
      echo " Output is available in: $OUTPUT_DIR"
