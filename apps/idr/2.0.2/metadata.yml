---
:schema: 1
:title: idr
:license: GNU GPL
:summary: Framework to measure the reproducibility of findings
:url: https://github.com/nboley/idr
:description: |
   The IDR (Irreproducible Discovery Rate) framework is a unified 
   approach to measure the reproducibility of findings identified 
   from replicate experiments and provide highly stable thresholds 
   based on reproducibility. Unlike the usual scalar measures of 
   reproducibility, the IDR approach creates a curve, which 
   quantitatively assesses when the findings are no longer 
   consistent across replicates. 

   In layman's terms, the IDR method compares a pair of ranked 
   lists of identifications (such as ChIP-seq peaks). These 
   ranked lists should not be pre-thresholded i.e. they should 
   provide identifications across the entire spectrum of high 
   confidence/enrichment (signal) and low confidence/enrichment 
   (noise). The IDR method then fits the bivariate rank distributions 
   over the replicates in order to separate signal from noise based 
   on a defined confidence of rank consistency and reproducibility 
   of identifications i.e the IDR threshold.
:group: Bioinformatics
:changelog: |
 * Mon Apr 18 2016 - Ruan G. Ellis <ruan.ellis@alces-software.com>
    - Added distro dependencies for EL
 * Fri Oct 16 2015 Ruan G. Ellis <ruan.ellis@alces-software.com>
    - First created
:src: 2.0.2.zip
:src_dir: idr-2.0.2
:type: apps
:version: '2.0.2'
:compilers:
  noarch:
:variants:
  python3:
    :description: "Builds for Python 3.3.x series"
    :python_bin: python3
    :python_libdir: python3.3
    :requirements:
      :build:
        - apps/python3 ~> 3.3.0
        - libs/numpy_python3
        - apps/setuptools_python3
        - libs/matplotlib_python3
        - libs/scipy_python3
      :runtime:
        - apps/python3 ~> 3.3.0
        - libs/numpy_python3
        - apps/setuptools_python3
        - libs/matplotlib_python3
        - libs/scipy_python3
  python34:
    :description: "Builds for Python 3.4.x series"
    :python_bin: python3
    :python_libdir: python3.4
    :requirements:
      :build:
        - apps/python3 ~> 3.4.0
        - libs/numpy_python34
        - apps/setuptools_python34
        - libs/matplotlib_python34
        - libs/scipy_python34
      :runtime:
        - apps/python3 ~> 3.4.0
        - libs/numpy_python34
        - apps/setuptools_python34
        - libs/matplotlib_python34
        - libs/scipy_python34
:compile: |
#  <%= variant[:python_bin] %> setup.py build <%= redirect(:build) %>
#  noop
:install: |
  PYTHONDONTWRITEBYTECODE=true
  PYTHONPATH=<%= dest_dir %>/python/lib/<%= variant[:python_libdir ] %>/site-packages:$PYTHONPATH
  mkdir -p <%= dest_dir %>/python/lib/<%= variant[:python_libdir ] %>/site-packages
  mkdir -p <%= dest_dir %>/tests
  mkdir -p <%= dest_dir %>/doc
  <%= variant[:python_bin] %> setup.py install --prefix <%= dest_dir %>/python <%= redirect(:install) %>
  mv <%= dest_dir %>/python/bin <%= dest_dir %>/bin
  cp -rv tests/* <%= dest_dir %>/tests
  cp README* LICENSE* TODO* <%= dest_dir %>/doc 
:module: |
  setenv ${appcaps}DIR ${appdir}
  setenv ${appcaps}BIN ${appdir}/bin
  setenv ${appcaps}PYTHON ${appdir}/python
  setenv ${appcaps}TESTS ${appdir}/tests
  setenv ${appcaps}DOC ${appdir}/doc

  prepend-path PATH ${appdir}/bin
  prepend-path PYTHONPATH ${appdir}/python/lib/<%= variant[:python_libdir] %>/site-packages
