---
:schema: 1
:title: plink
:license: GPLv3
:summary: Whole genome association analysis toolkit
:url: http://pngu.mgh.harvard.edu/~purcell/plink/
:description: |
  PLINK is a free, open-source whole genome association analysis
  toolset, designed to perform a range of basic, large-scale analyses
  in a computationally efficient manner.  The focus of PLINK is purely
  on analysis of genotype/phenotype data, so there is no support for
  steps prior to this (e.g. study design and planning, generating
  genotype or CNV calls from raw data). Through integration with
  gPLINK and Haploview, there is some support for the subsequent
  visualization, annotation and storage of results.
:group: Bioinformatics
:changelog: |
  * Wed Sep 14 2016 Andrew Provis <andrew.provis@alces-software.com>
    - Updated example templates to Clusterware literal scripts
  * Thu 16 Jun 2016 - Ruan G. Ellis <ruan.ellis@alces-software.com>
    - Added distro dependencies for EL
    - Use patchelf to remove hardcoded ATLAS library paths
  * Fri Jun 19 2015 Ruan G. Ellis <ruan.ellis@alces-software.com>
    - Updated to latest build 150618
  * Wed Nov 19 2014 Mark J. Titorenko <mark.titorenko@alces-software.com>
    - Updated to latest 1.90 version
    - Updated example script with --memory and --threads parameters
    - Added example script for SMP/multithreaded use
  * Tue May 13 2014 Mark J. Titorenko <mark.titorenko@alces-software.com>
    - Tweaked environment variables to add MALLOC_ARENA_MAX=1
  * Mon May 12 2014 Ben Armston <ben.armston@alces-software.com>
    - Added example scripts
    - Converted alias for gplink to wrapper script form
  * Wed Oct 10 2012 Mark J. Titorenko <mark.titorenko@alces-software.com>
    - First created
:sources:
  - zlib-1.2.8.tar.gz
  - plink.sh.md
  - plink-1proc.sh.tpl
  - plink-2proc.sh.tpl
:patches:
  - gridware-atlas-and-static-zlib.patch
:src: plink_src.zip
:src_dir: .
:type: apps
:version: '1.90.150618'
:requirements:
  :build:
    - libs/atlas
    - apps/patchelf
  :runtime:
    - libs/atlas
:compilers:
  gcc:
:dependencies:
  el:
    - gcc-c++
    - gcc-gfortran
:compile: |
  tar xzf <%= source('zlib-1.2.8.tar.gz') %>
  cd zlib-1.2.8
  ./configure <%= redirect(:zlib_configure) %>
  make <%= redirect(:zlib_compile) %>
  cd ..
  #mv Makefile.std Makefile
  make <%= redirect(:compile) %>
  for a in $(find . | grep plink); do
    if ldd $a | grep -q gridware.*atlas; then
      fq_lib=$(ldd $a | grep gridware.*atlas | awk '{print $1;}')
      short_lib=$(basename $fq_lib)
      patchelf --replace-needed $fq_lib $short_lib $a
    fi
  done
:install: |
  mkdir <%= dest_dir %>/{bin,doc,examples}
  install -D -m 0755 plink <%= dest_dir %>/bin <%= redirect(:install) %>
  install -D -m 0644 LICENSE <%= dest_dir %>/doc <%= redirect(:install) %>
  install -D -m 0644 toy.map toy.ped <%= dest_dir %>/examples <%= redirect(:install) %>

  mkdir -pv <%= dest_dir %>/share/clusterware/templates <%= redirect(:install) %>
  mkdir -pv <%= dest_dir %>/share/clusterware/guides <%= redirect(:install) %>
  cp -v <%= source('plink-1proc.sh.tpl') %> <%= dest_dir %>/share/clusterware/templates <%= redirect(:install) %>
  cp -v <%= source('plink-2proc.sh.tpl') %> <%= dest_dir %>/share/clusterware/templates <%= redirect(:install) %>
  cp -v <%= source('plink.sh.md') %> <%= dest_dir %>/share/clusterware/guides <%= redirect(:install) %>
:module: |
  setenv ${appcaps}DIR ${appdir}
  setenv ${appcaps}BIN ${appdir}/bin
  setenv ${appcaps}DOC ${appdir}/doc
  setenv ${appcaps}EXAMPLES ${appdir}/examples

  setenv ${appcaps}TEMPLATES ${appdir}/share/clusterware/templates
  setenv ${appcaps}EXAMPLEDOCS ${appdir}/share/clusterware/guides
  prepend-path CW_DOCPATH ${appdir}/share/clusterware

  prepend-path PATH ${appdir}/bin
