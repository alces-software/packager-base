---
:schema: 1
:title: Oases
:license: GPL
:summary: De novo transcriptome assembler for very short reads
:url: http://www.ebi.ac.uk/~zerbino/oases/
:description: |
  Oases is a de novo transcriptome assembler designed to produce
  transcripts from short read sequencing technologies, such as
  Illumina, SOLiD, or 454 in the absence of any genomic assembly. It
  was developed by Marcel Schulz (MPI for Molecular Genomics) and
  Daniel Zerbino (previously at the European Bioinformatics Institute
  (EMBL-EBI), now at UC Santa Cruz).

  Oases uploads a preliminary assembly produced by Velvet, and
  clusters the contigs into small groups, called loci. It then
  exploits the paired-end read and long read information, when
  available, to construct transcript isoforms.
:group: Bioinformatics
:changelog: |
  * Thu Apr 10 2014 - Mark J. Titorenko <mark.titorenko@alces-software.com>
    - Repointed URL at upstream gridware on
      download.alces-software.com due to changes to upstream 0.2.08
      tarball (which now looks like 0.2.09) (was:
      http://www.ebi.ac.uk/~zerbino/oases/oases_0.2.08.tgz)
    - Added example script and package title
  * Fri Oct 12 2012 - Mark J. Titorenko <mark.titorenko@alces-software.com>
    - Updated to version 0.2.08
  * Sun Sep  9 2012 - Mark J. Titorenko <mark.titorenko@alces-software.com>
    - Refactored to packager style
  * Fri Feb 17 2012 Mark J. Titorenko <mark.titorenko@alces-software.com>
    - First created
:src: oases_0.2.08.tgz
:src_dir: oases_0.2.08
:type: apps
:version: '0.7.1'
:requirements:
  :build: apps/velvet >= 1.2.06
  :runtime: apps/velvet >= 1.2.06
:compilers:
  gcc:
:compile: |
  make VELVET_DIR=${VELVETBUILD} <%= redirect(:make) %>
:install: |
  mkdir <%= dest_dir %>/bin <%= dest_dir %>/doc
  cp oases scripts/oases_pipeline.py <%= dest_dir %>/bin <%= redirect(:install) %>
  cp ChangeLog OasesManual.pdf LICENSE.txt README.txt <%= dest_dir %>/doc <%= redirect(:install) %>
  cp -rv data <%= dest_dir %> <%= redirect(:install) %>
:module: |
  setenv ${appcaps}DIR ${appdir}
  setenv ${appcaps}BIN ${appdir}/bin
  setenv ${appcaps}DATA ${appdir}/data

  prepend-path PATH ${appdir}/bin
:example_scripts:
  - tags: ['script:type=batch']
    name: 'Process an existing velvet data directory'
    description: 'Execute oases tool on a directory containing existing output from a velvet run'
    template: 'script:stub:simple'
    content: |
      #############################################
      # APPLICATION COMMANDS - change as required
      #############################################
      #
      # For full Oases usage information see:
      #   http://www.ebi.ac.uk/~zerbino/oases/OasesManual.pdf
      #   or: $OASESDIR/doc/OasesManual.pdf
      # For more information about Oases, please refer to the website:
      #   http://www.ebi.ac.uk/~zerbino/oases/
      
      # Input directory - from a previous velveth run
      DATA_DIR=velvet/input

      # Command-line options (run oases with no options for a list).
      #OASES_OPTIONS=""

      # Execute velvetg
      oases "$DATA_DIR" \
        $OASES_OPTIONS

      echo ""
      echo "-----------------"
      echo " oases completed"
      echo "-----------------"
      echo " Output is available in: $DATA_DIR"
  - tags: ['script:type=batch']
    name: 'Velvet and Oases; single input file'
    description: 'Execute velveth for a single input file and velvetg and oases on the results'
    template: 'script:stub:simple'
    content: |
      #############################################
      # APPLICATION COMMANDS - change as required
      #############################################
      #
      # For full Velvet usage information see:
      #   http://www.ebi.ac.uk/~zerbino/velvet/Manual.pdf
      #   or: $VELVETDIR/doc/Manual.pdf
      # For more information about Velvet, please refer to the website:
      #   http://www.ebi.ac.uk/~zerbino/velvet/
      #
      # For full Oases usage information see:
      #   http://www.ebi.ac.uk/~zerbino/oases/OasesManual.pdf
      #   or: $OASESDIR/doc/OasesManual.pdf
      # For more information about Oases, please refer to the website:
      #   http://www.ebi.ac.uk/~zerbino/oases/
      
      # Output/working data directory
      DATA_DIR=velvet/output.${JOB_ID-${PORTAL_TASK_ID-$$}}

      # Hash length.
      # Either: an odd integer <= the max kmer length
      #     Or: m,M,s where m and M are odd integers with m < M <= the max kmer
      #         length
      #
      # If an odd integer is provided it will be decremented, and if a value
      # higher than the max kmer length is specified (usually 31), it will
      # be reduced to the max.
      {% comment %}
      TODO: replace with `default` filter when available, i.e.
      {{ fact.apps_velvet_hashLength | default: "31" }}
      {% endcomment %}
      HASH_LENGTH={% if fact.apps_velvet_hashLength %}{{ fact.velvet_hashLength }}{% else %}31{% endif %}

      # One of: -fasta, -fastq, -raw, -fasta.gz, -fastq.gz, -raw.gz, -sam,
      #   -bam, -fmtAuto.
      # The default of `-fmtAuto` detects fasta or fastq (and will try the
      #   following programs for decompression : gunzip, pbunzip2, bunzip2)
      FILE_FORMAT="-fmtAuto"

      # One of: -short, -shortPaired, -short2, -shortPaired2, -long,
      #   -longPaired, -reference
      READ_TYPE="-short"

      # File layout options for paired reads (only for fasta and fastq formats)
      # One or of -interleaved or -separate.
      #FILE_OPTIONS="-interleaved"

      # Additional command-line options (run velveth with no options for a
      # list)
      #VELVETH_OPTIONS=""

      # Input file (or files)
      INPUT_FILES=("$VELVETDATA/test_reads.fa")

      # Command-line options (run velvetg with no options for a list).
      # This pipeline requires the -read_trkg option.
      VELVETG_OPTIONS="-read_trkg yes"

      # Command-line options (run oases with no options for a list).
      #OASES_OPTIONS=""

      # Create the directory to contain the output files
      mkdir -p "$DATA_DIR"

      # Execute velveth
      velveth "$DATA_DIR" \
        "$HASH_LENGTH" \
        "$FILE_FORMAT" "$READ_TYPE" $FILE_OPTIONS "${INPUT_FILES[@]}" \
        $VELVETH_OPTIONS

      # Execute velvetg
      velvetg "$DATA_DIR" \
        $VELVETG_OPTIONS

      # Execute oases
      oases "$DATA_DIR" \
        $OASES_OPTIONS

      echo ""
      echo "--------------------------"
      echo " oases pipeline completed"
      echo "--------------------------"
      echo " Output is available in: $DATA_DIR"
