---
:schema: 1
:title: Trinity
:license: BSD
:summary: A novel method for the efficient and robust de novo reconstruction of transcriptomes from RNA-seq data
:url: http://trinityrnaseq.sourceforge.net/
:description: |
  Trinity, developed at the Broad Institute and the Hebrew University
  of Jerusalem, represents a novel method for the efficient and robust
  de novo reconstruction of transcriptomes from RNA-seq data. Trinity
  combines three independent software modules: Inchworm, Chrysalis,
  and Butterfly, applied sequentially to process large volumes of
  RNA-seq reads. Trinity partitions the sequence data into many
  individual de Bruijn graphs, each representing the transcriptional
  complexity at at a given gene or locus, and then processes each
  graph independently to extract full-length splicing isoforms and to
  tease apart transcripts derived from paralogous genes.
:group: Bioinformatics
:changelog: |
  * Thu Sep  8 2016 Andrew Provis <andrew.provis@alces-software.com>
    - Updated example templates to Clusterware literal scripts
  * Wed Mar 30 2016 Mark J. Titorenko <mark.titorenko@alces-software.com>
    - Updated to latest version, v2.2.0
  * Wed Oct  8 2014 Mark J. Titorenko <mark.titorenko@alces-software.com>
    - Updated example script to refer to correct fact for smp slots
  * Tue Apr 15 2014 - James Donohue <james.donohue@alces-software.com>
    - Bumped to 2014-04-13 version
    - Removed Java memory patch (now exists upstream)
  * Thu Apr  3 2014 - Mark J. Titorenko <mark.titorenko@alces-software.com>
    - Added example script and title
    - Tweaked environment variables to add MALLOC_ARENA_MAX=1
    - Added runtime dependencies on Bowtie and Samtools
    - Added patch to introduce Java memory requirement when version is requested
  * Fri Dec 13 2013 - Mark J. Titorenko <mark.titorenko@alces-software.com>
    - Bumped to 2013-11-10 version
  * Tue Oct  1 2013 - James Donohue <james.donohue@alces-software.com>
    - Bumped to 2013-08-04 version
  * Sat Sep  8 2012 - Mark J. Titorenko <mark.titorenko@alces-software.com>
    - Refactored to packager style
  * Fri Feb 17 2012 Mark J. Titorenko <mark.titorenko@alces-software.com>
    - First created
:src: v2.2.0.tar.gz
:src_dir: trinityrnaseq-2.2.0
:type: apps
:version: 2.2.0
:requirements:
  :runtime:
    - apps/bowtie
    - apps/samtools
:dependencies:
  el:
    - gcc-c++
    - zlib-devel
    - git
    - ncurses-devel
    - perl-Data-Dumper
:compilers:
  gcc:
:compile: |
  # Prevent CXX from being supplied as an absolute path because the
  # Inchworm/configure file branches based on the name of the compiler
  # binary, not taking into account that it might be prefixed with a
  # path.  We assume that the PATH is set up correctly that the
  # preferred binary is found without the path prefix.
  CXX=$(basename "$CXX")

  make <%= redirect(:compile) %>
  make plugins <%= redirect(:compile) %>
:sources:
  - trinity.sh.tpl
  - trinity.sh.md
:install: |
  cp -Rv * <%= dest_dir %> <%= redirect(:install) %>
  mkdir -pv <%= dest_dir %>/share/clusterware/templates <%= redirect(:install) %>
  mkdir -pv <%= dest_dir %>/share/clusterware/guides <%= redirect(:install) %>
  cp -v <%= source('trinity.sh.tpl') %> <%= dest_dir %>/share/clusterware/templates <%= redirect(:install) %>
  cp -v <%= source('trinity.sh.md') %> <%= dest_dir %>/share/clusterware/guides <%= redirect(:install) %>
:module: |
  setenv ${appcaps}DIR ${appdir}
  setenv ${appcaps}BIN ${appdir}
  setenv ${appcaps}TEMPLATES ${appdir}/share/clusterware/templates
  setenv ${appcaps}EXAMPLEDOCS ${appdir}/share/clusterware/guides

  # This variable tunes the virtual memory system to work better with
  # abstracted languages, such as Java.  If you need this setting to
  # be skipped, ensure the variable ALCES_SKIP_VMM_TWEAK is set and
  # exported in your environment before loading the module.
  if { [info exists ::env(ALCES_SKIP_VMM_TWEAK)] == 0 } {
    setenv MALLOC_ARENA_MAX 1
  }

  prepend-path PERL5LIB ${appdir}/perl/lib/perl5
  prepend-path MANPATH ${appdir}/perl/man
  prepend-path PATH ${appdir}/perl/bin

  prepend-path PATH ${appdir}/util
  prepend-path PATH ${appdir}
  prepend-path LD_LIBRARY_PATH ${appdir}/trinity-plugins/jellyfish/lib

  prepend-path CW_DOCPATH ${appdir}/share/clusterware
