---
:schema: 1
:title: Atomistic Simulation Environment
:license: LGPLv2.1+
:summary: Python modules for manipulating atoms, analyzing simulations and visualization
:url: https://wiki.fysik.dtu.dk/ase/
:description: |
  ASE is an Atomistic Simulation Environment written in the Python
  programming language with the aim of setting up, steering, and
  analyzing atomistic simulations.

  Setting up an atomistic total energy calculation or molecular
  dynamics simulation with ASE is simple and straightforward. ASE can
  be used via a graphical user interface, Command line tools and the
  Python language.

  Since ASE is based on the Python scripting language it is possible
  to perform very complicated simulation tasks without any code
  modifications. For example, a sequence of calculations may be
  performed with the use of simple “for-loop” constructions. There
  exist ASE modules for performing many standard simulation tasks.

  The Python code in ASE is structured in modules intended for
  different purposes. There are calculators for calculating energies,
  forces and stresses, md and optimize modules for controlling the
  motion of atoms, constraint objects and filters for performing
  nudged-elastic-band calculations etc. The modularity of the
  object-oriented code make it simple to contribute new functionality
  to ASE.

  It fits nicely into the rest of the Python world with use of the
  popular NumPy package for numerical work. The use of the Python
  language allows ASE to be used both interactively as well as in
  scripts.

  The CAMPOS Atomic Simulation Environment is released under the GNU
  Lesser General Public License version 2.1 or any later
  version. Everybody is invited to participate in using and developing
  the code.
:group: Chemistry
:changelog: |
  * Fri Sep 28 2012 Mark J. Titorenko <mark.titorenko@alces-software.com>
    - First created
:src: python-ase-3.6.0.2515.tar.gz
:src_dir: python-ase-3.6.0.2515
:type: apps
:version: '3.6.0'
# requires: pygtk
:requirements:
  :runtime: libs/numpy
  :tool: apps/setuptools
:compilers:
  noarch:
:compile: |
  # no-op; this is a distribution of a Python application
  python setup.py build <%= redirect(:build) %>
  PYTHONDEPSDIR=$(pwd)/python
  export PYTHONPATH=$PYTHONPATH:$PYTHONDEPSDIR
  mkdir $PYTHONDEPSDIR
  easy_install --install-dir $PYTHONDEPSDIR matplotlib <%= redirect(:python) %>
:install: |
  PYTHONDEPSDIR=$(pwd)/python
  python setup.py install --prefix <%= dest_dir %>/python <%= redirect(:install) %>
  cp -av $PYTHONDEPSDIR/* <%= dest_dir %>/python/lib/python2.7/site-packages <%= redirect(:install) %>
  mv <%= dest_dir %>/python/bin <%= dest_dir %>/bin
:module: |
  setenv ${appcaps}DIR ${appdir}
  setenv ${appcaps}BIN ${appdir}/bin

  prepend-path PATH ${appdir}/bin

  prepend-path PYTHONPATH ${appdir}/python/lib/python2.7/site-packages
