---
:schema: 1
:title: MODELLER
:license: NONFREE - Free to use for academic use only; see http://bit.ly/1lhhhBL
:summary: Program for Comparative Protein Structure Modelling by Satisfaction of Spatial Results
:url: http://salilab.org/modeller/about_modeller.html
:description: |
  MODELLER is used for homology or comparative modeling of protein
  three-dimensional structures. The user provides an alignment
  of a sequence to be modeled with known related structures and
  MODELLER automatically calculates a model containing all
  non-hydrogen atoms. MODELLER implements comparative protein
  structure modeling by satisfaction of spatial restraints, and can
  perform many additional tasks, including de novo modeling of loops
  in protein structures, optimization of various models of protein
  structure with respect to a flexibly defined objective function,
  multiple alignment of protein sequences and/or structures,
  clustering, searching of sequence databases, comparison of protein
  structures, etc. MODELLER is available for download for most
  Unix/Linux systems, Windows, and Mac.

  Several graphical interfaces to MODELLER are commercially
  available. There are also many other resources and people using
  Modeller in graphical or web interfaces or other frameworks.
:group: Bioinformatics
:changelog: |
  * Thu Dec 15 2016 - Andrew Provis <andrew.provis@alces-software.com>
    - Updated example templates to Clusterware literal scripts
  * Thu Feb 12 2015 - Mark J. Titorenko <mark.titorenko@alces-software.com>
    - Updated to v9.14
    - Reworked license file/text handling
  * Thu Mar  6 2014 James Donohue <james.donohue@alces-software.com>
    - Added example script
  * Mon Jan 27 2014 - James Donohue <james.donohue@alces-software.com>
    - First created
:src: modeller-9.14.tar.gz
:src_dir: modeller-9.14
:type: apps
:version: '9.14'
:compilers:
  bin:
:requirements:
  :runtime: apps/python # Claims support for versions v2.3-3.2
:params:
  :license: "Path or URL to file containing the license key string (pass 'skip' to continue without a license)"
:sources:
  - modeller.sh.md
  - modeller.sh.tpl
:compile: |
  # no-op; this is a binary distribution
:install: |
  <% if param('license') != 'skip' %>
    <% if URI.parse(param('license')).scheme.nil? %>
      cp <%= param('license') %> license.key.txt
    <% else %>
      wget -O license.key.txt <%= param('license') %>    
    <% end %>
    license_key="$(cat license.key.txt)"
    rm -f license.key.txt
  <% else %>
    license_key="UNLICENSED"
  <% end %>

  # Assume x86_64 architecture and license has been stored in etc/license.key.txt
  (echo 3; echo <%= dest_dir %>; echo "${license_key}") | ./Install <%= redirect(:install) %>
  mv -v <%= dest_dir %>/INSTALLATION <%= dest_dir %>/README <%= dest_dir %>/doc <%= redirect(:install) %>

  mkdir -pv <%= dest_dir %>/share/clusterware/templates <%= redirect(:install) %>
  mkdir -pv <%= dest_dir %>/share/clusterware/guides <%= redirect(:install) %>
  cp -v <%= source('modeller.sh.md') %> <%= dest_dir %>/share/clusterware/guides <%= redirect(:install) %>
  cp -v <%= source('modeller.sh.tpl') %> <%= dest_dir %>/share/clusterware/templates <%= redirect(:install) %>
:module: |
  setenv ${appcaps}DIR ${appdir}
  setenv ${appcaps}BIN ${appdir}/bin
  setenv ${appcaps}DOC ${appdir}/doc
  setenv ${appcaps}LIB ${appdir}/lib
  setenv ${appcaps}EXAMPLES ${appdir}/examples

  prepend-path PATH ${appdir}/bin

  setenv ${appcaps}TEMPLATES ${appdir}/share/clusterware/templates
  setenv ${appcaps}EXAMPLEDOCS ${appdir}/share/clusterware/guides
  prepend-path CW_DOCPATH ${appdir}/share/clusterware
